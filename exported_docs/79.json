{
  "id": 79,
  "title": "document_store",
  "body": "import sqlite3\nimport mimetypes, pathlib\nfrom typing import Union, Optional\n\nclass DocumentStore:\n    def __init__(self, db_path):\n        self.conn = sqlite3.connect(db_path)\n        self.conn.row_factory = sqlite3.Row\n        self.ensure_content_type_column()\n\n    def ensure_content_type_column(self):\n        cur = self.conn.cursor()\n        cur.execute(\"PRAGMA table_info(documents)\")\n        cols = {row[1] for row in cur.fetchall()}\n        if \"content_type\" not in cols:\n            self.conn.execute(\"ALTER TABLE documents ADD COLUMN content_type TEXT DEFAULT 'text/plain'\")\n            self.conn.commit()\n\n    def add_document(self, title: str, body: Union[str, bytes], content_type: str = \"text/plain\") -> int:\n        cur = self.conn.cursor()\n        cur.execute(\n            \"INSERT INTO documents (title, body, content_type) VALUES (?, ?, ?)\",\n            (title, body, content_type),\n        )\n        self.conn.commit()\n        return cur.lastrowid\n\n    def update_document(self, doc_id: int, new_body: Union[str, bytes], content_type: Optional[str] = None):\n        if content_type is None:\n            self.conn.execute(\"UPDATE documents SET body=? WHERE id=?\", (new_body, doc_id))\n        else:\n            self.conn.execute(\"UPDATE documents SET body=?, content_type=? WHERE id=?\", (new_body, content_type, doc_id))\n        self.conn.commit()\n\n    def get_document(self, doc_id: int):\n        row = self.conn.execute(\"SELECT id, title, body, content_type FROM documents WHERE id=?\", (doc_id,)).fetchone()\n        if not row:\n            return None\n        return {\"id\": row[\"id\"], \"title\": row[\"title\"], \"body\": row[\"body\"], \"content_type\": row[\"content_type\"]}\n\n    def append_to_document(self, doc_id: int, extra_text: str):\n        row = self.get_document(doc_id)\n        if not row:\n            raise ValueError(f\"No document with id {doc_id}\")\n        body = row[\"body\"] or \"\"\n        if isinstance(body, bytes):\n            raise ValueError(\"Cannot append text to binary document\")\n        if body and not body.endswith(\"\\n\"):\n            body += \"\\n\"\n        self.update_document(doc_id, body + extra_text, content_type=row[\"content_type\"] or \"text/plain\")\n\n    def add_image_from_file(self, path: str, title: str = None) -> int:\n        p = pathlib.Path(path)\n        data = p.read_bytes()\n        ctype, _ = mimetypes.guess_type(p.name)\n        if not ctype or not ctype.startswith(\"image/\"):\n            raise ValueError(\"Not an image file\")\n        return self.add_document(title or p.stem, data, content_type=ctype)\n"
}