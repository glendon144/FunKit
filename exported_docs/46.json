{
  "id": 46,
  "title": "build_lean_no_torch",
  "body": "#!/usr/bin/env bash\nset -euo pipefail\n\nAPP_NAME=\"funkit\"                     # whatever your .spec builds (dist/<APP_NAME>)\nSPEC_FILE=\"funkit.spec\"               # change if your spec has a different name\nSTAMP=\"$(date -u +'%Y%m%d_%H%M%S')\"\nVER=\"$(cat VERSION 2>/dev/null || echo 'dev')\"\n\necho \"==> Archiving current dist (if present)\u2026\"\nif [[ -d \"dist/${APP_NAME}\" ]]; then\n  mkdir -p release-archives\n  ARCHIVE=\"release-archives/${APP_NAME}-linux-${VER}-${STAMP}.tgz\"\n  (cd dist && tar -czf \"../${ARCHIVE}\" \"${APP_NAME}\")\n  sha256sum \"${ARCHIVE}\" | tee \"${ARCHIVE}.sha256\"\n  du -h \"${ARCHIVE}\"\nelse\n  echo \"No existing dist/${APP_NAME} to archive (skipping).\"\nfi\n\necho \"==> Cleaning previous build artifacts\u2026\"\nrm -rf build dist\n\necho \"==> Rebuilding WITHOUT PyTorch (and friends)\u2026\"\n# If you prefer CLI only, uncomment this line (works even without editing the .spec):\n# pyinstaller -y --clean --name \"${APP_NAME}\" \\\n#   --exclude-module torch --exclude-module torchvision --exclude-module torchaudio \\\n#   --exclude-module tensorflow --exclude-module cv2 \\\n#   main.py\n\n# Default: build from your spec (after you add the excludes shown below)\npyinstaller -y --clean \"${SPEC_FILE}\"\n\necho \"==> Size of new build:\"\ndu -sh \"dist/${APP_NAME}\" || true\n\necho \"==> Build complete. Artifacts in dist/${APP_NAME}\"\n\n"
}