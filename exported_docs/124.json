{
  "id": 124,
  "title": "funkit_lean",
  "body": "# Regenerate funkit_lean.spec with lean settings and common excludes.\nfrom pathlib import Path\n\nspec = r'''# -*- mode: python ; coding: utf-8 -*-\n# Lean PyInstaller spec for FunKit (v1.2.1+)\n# - one-dir build at dist/funkit\n# - strips debug symbols\n# - excludes heavy unused stacks (torch/tensorflow/etc.)\n# - includes Flask stack via hiddenimports (lazy import safe)\n# Usage:  pyinstaller -y --clean funkit_lean.spec\n\nblock_cipher = None\n\na = Analysis(\n    ['main.py'],\n    pathex=[],\n    binaries=[],\n    datas=[],\n    hiddenimports=[\n        # Export server & templating\n        'flask', 'jinja2', 'werkzeug', 'markupsafe', 'itsdangerous',\n    ],\n    hookspath=[],\n    hooksconfig={},\n    runtime_hooks=[],\n    excludes=[\n        # Big ML stacks not used by FunKit core\n        'torch', 'torchvision', 'torchaudio', 'triton',\n        'tensorflow', 'tensorboard',\n        'onnx', 'onnxruntime',\n        # JIT/CUDA/science runtimes\n        'numba', 'llvmlite', 'scipy', 'sympy',\n        # Data/viz libs\n        'matplotlib', 'pandas', 'pyarrow', 'moviepy', 'imageio',\n        # Computer vision (exclude if unused)\n        'opencv-python', 'cv2',\n        # Optional NumPy plugin that can trigger TBB warnings\n        'numpy.np.ufunc.tbbpool',\n    ],\n    noarchive=False,\n)\n\npyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)\n\nexe = EXE(\n    pyz,\n    a.scripts,\n    a.binaries,\n    a.zipfiles,\n    a.datas,\n    [],\n    name='funkit',\n    debug=False,\n    bootloader_ignore_signals=False,\n    strip=True,   # remove debug symbols to reduce size\n    upx=False,    # set to True if UPX is installed and desired\n    console=True, # keep terminal for logs; set False for windowed\n    disable_windowed_traceback=False,\n    target_arch=None,\n    codesign_identity=None,\n    entitlements_file=None,\n)\n\ncoll = COLLECT(\n    exe,\n    a.binaries,\n    a.zipfiles,\n    a.datas,\n    strip=False,\n    upx=False,\n    upx_exclude=[],\n    name='funkit',\n)\n'''\n\nout = Path('/mnt/data/funkit_lean.spec')\nout.write_text(spec, encoding='utf-8')\nprint(out.as_posix())\n\n"
}