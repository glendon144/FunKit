{
  "id": 120,
  "title": "opml_extras_plugin",
  "body": "import tkinter as tk\nfrom tkinter import messagebox\n\nclass OPMLExtras:\n    def __init__(self, doc_store, app):\n        self.doc_store = doc_store\n        self.app = app\n        self.current_doc_id = None\n        self.current_title = None\n        self.text = None\n\n    def _convert_current_to_opml(self):\n        try:\n            try:\n                start = self.text.index(tk.SEL_FIRST)\n                end = self.text.index(tk.SEL_LAST)\n                content = self.text.get(start, end)\n            except Exception:\n                row = self.doc_store.get_document(self.current_doc_id)\n                content = row[\"body\"] if isinstance(row, dict) else (row[2] if row else \"\")\n\n            content = (content or \"\").strip()\n            if not content:\n                messagebox.showinfo(\"Convert \u2192 OPML\", \"No text to convert.\")\n                return\n\n            title = (self.current_title or f\"Doc {self.current_doc_id}\").strip()\n            xml = f\"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<opml version=\"2.0\">\n  <head>\n    <title>{title}</title>\n  </head>\n  <body>\n    <outline text=\"{title}\">\n{''.join('      <outline text=\"' + line.replace('\"','&quot;') + '\"/>' for line in content.splitlines())}\n    </outline>\n  </body>\n</opml>\n\"\"\".rstrip()\n\n            new_id = self.doc_store.add_document(f\"{title} (OPML)\", xml, content_type=\"text/opml\")\n            self.doc_store.append_to_document(self.current_doc_id, f\"[OPML version](doc:{new_id})\")\n\n            self.current_doc_id = new_id\n            if hasattr(self, \"_render_document\"):\n                self._render_document(self.doc_store.get_document(new_id))\n            if hasattr(self, \"_refresh_sidebar\"):\n                self._refresh_sidebar()\n\n        except Exception as e:\n            messagebox.showerror(\"Convert \u2192 OPML\", f\"OPML conversion failed:\\n{e}\")\n"
}