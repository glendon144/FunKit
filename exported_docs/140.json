{
  "id": 140,
  "title": "start_localai",
  "body": "\n#!/usr/bin/env bash\nset -Eeuo pipefail\n# start_localai.sh \u2014 spin up LocalAI on :8080 and register a Mistral 7B GGUF\n\nMODELS_DIR=\"${MODELS_DIR:-$HOME/localai/models}\"\nPORT=\"${PORT:-8080}\"\nIMAGE=\"quay.io/go-skynet/local-ai:latest\"\nNAME=\"localai\"\n\nmkdir -p \"$MODELS_DIR\"\necho \"Models dir: $MODELS_DIR\"\n\n# Create a sample model YAML if not present\nYAML=\"$MODELS_DIR/mistral-7b-instruct.yaml\"\nif [[ ! -f \"$YAML\" ]]; then\n  cat > \"$YAML\" <<'YML'\nname: mistral-7b-instruct\nbackend: ggml\nparameters:\n  model: /models/mistral-7b-instruct.Q4_K_M.gguf\nYML\n  echo \"Wrote $YAML (edit 'model:' path to your GGUF filename)\"\nfi\n\n# Run LocalAI\ndocker rm -f \"$NAME\" >/dev/null 2>&1 || true\ndocker run -d --name \"$NAME\"   -p ${PORT}:8080   -v \"$MODELS_DIR\":/models   -e MODELS_PATH=/models   \"$IMAGE\"\n\necho \"LocalAI running on http://localhost:${PORT}\"\necho \"Remember to place your GGUF file at: $MODELS_DIR/mistral-7b-instruct.Q4_K_M.gguf (or update the YAML)\"\necho \"Env to use in FunKit:\"\necho \"  export PIKIT_OPENAI_BASE_URL='http://localhost:${PORT}/v1'\"\necho \"  export PIKIT_OPENAI_API_KEY='sk-local'\"\necho \"  export PIKIT_MODEL_NAME='mistral-7b-instruct'\"\n"
}