{
  "id": 64,
  "title": "create_new_build",
  "body": "# \ud83d\ude80 PHASE 6.4.2.2 \u2014 FULL STABLE BUILD STARTING NOW \ud83d\ude80\n\n# Create clean workspace\nworkspace_phase6422_tkinter = \"/mnt/data/demokit_phase6422_tkinter\"\nos.makedirs(f\"{workspace_phase6422_tkinter}/modules\", exist_ok=True)\nos.makedirs(f\"{workspace_phase6422_tkinter}/storage\", exist_ok=True)\nos.makedirs(f\"{workspace_phase6422_tkinter}/credentials\", exist_ok=True)\nos.makedirs(f\"{workspace_phase6422_tkinter}/logs\", exist_ok=True)\n\n# Reuse backend modules identical to previous build (clean preserved code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/document_store.py\", \"w\") as f:\n    f.write(document_store_code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/logger.py\", \"w\") as f:\n    f.write(logger_code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/hypertext_parser.py\", \"w\") as f:\n    f.write(hypertext_parser_code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/ai_interface.py\", \"w\") as f:\n    f.write(ai_interface_code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/command_processor.py\", \"w\") as f:\n    f.write(command_processor_code)\nwith open(f\"{workspace_phase6422_tkinter}/modules/__init__.py\", \"w\") as f:\n    f.write(\"\")\n\n# Now patch GUI with:\n# 1. Highlight wrapping instead of deletion.\n# 2. Sidebar refresh after document creation.\n# 3. Back button retained.\n# 4. run() method included.\n\ngui_tkinter_code_6422 = gui_tkinter_code + \"\"\"\n\n    def ask_ai_autolink(self):\n        try:\n            selected_text = self.text_editor.selection_get()\n        except tk.TclError:\n            messagebox.showwarning(\"No selection\", \"Please select text first.\")\n            return\n\n        question = simpledialog.askstring(\"ASK AI\", \"Enter optional question or context:\")\n        query = (question + \" \" if question else \"\") + selected_text\n        response = self.processor.ai.ask(query)\n        new_doc_id = self.processor.doc_store.new_document(f\"AI Response to: {selected_text}\", response)\n\n        # Instead of deleting, insert link markup wrapping selection\n        self.text_editor.insert(tk.SEL_FIRST, f\"[[\")\n        self.text_editor.insert(tk.SEL_LAST, f\"|doc:{new_doc_id}]]\")\n        self.display_body_with_links(self.text_editor.get(\"1.0\", tk.END))\n\n        messagebox.showinfo(\"AI Response\", f\"AI response saved to Document {new_doc_id}.\")\n        self.load_documents()\n\n    def run(self):\n        self.root.mainloop()\n\"\"\"\n\n# Write patched GUI module\nwith open(f\"{workspace_phase6422_tkinter}/modules/gui_tkinter.py\", \"w\") as f:\n    f.write(gui_tkinter_code_6422)\n\n# Main launcher remains identical\nwith open(f\"{workspace_phase6422_tkinter}/main.py\", \"w\") as f:\n    f.write(\"\"\"\nfrom modules import document_store, logger, ai_interface, command_processor, gui_tkinter\n\nif __name__ == \"__main__\":\n    doc_store = document_store.DocumentStore(\"storage/documents.csv\")\n    log = logger.Logger()\n    ai = ai_interface.AIInterface()\n    processor = command_processor.CommandProcessor(doc_store, ai, log)\n\n    app = gui_tkinter.DemoKitGUI(processor)\n    app.run()\n\"\"\")\n\n# Package Phase 6.4.2.2 Build\nzip_path_phase6422_tkinter = \"/mnt/data/demokit_phase6422_tkinter.zip\"\nwith zipfile.ZipFile(zip_path_phase6422_tkinter, 'w') as zipf:\n    for root, dirs, files in os.walk(workspace_phase6422_tkinter):\n        for file in files:\n            file_path = os.path.join(root, file)\n            arcname = os.path.relpath(file_path, workspace_phase6422_tkinter)\n            zipf.write(file_path, arcname)\n\nzip_path_phase6422_tkinter\n\n"
}