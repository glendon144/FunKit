{
  "id": 128,
  "title": "release_1_2_2",
  "body": "#!/usr/bin/env bash\nset -euo pipefail\n\nVERSION=\"1.2.2\"\nBRANCH=\"main\"\n\necho \"==> Preparing release v${VERSION} on branch ${BRANCH}\"\n\ngit fetch origin\ngit checkout \"${BRANCH}\"\ngit pull --rebase origin \"${BRANCH}\"\n\n# Warn if there are uncommitted changes, but proceed\nif ! git diff --quiet || ! git diff --cached --quiet; then\n  echo \"\u26a0\ufe0f  You have uncommitted changes. They'll be included in this release.\"\nfi\n\n# Ensure files exist\n[[ -f CHANGELOG.md ]] || touch CHANGELOG.md\necho \"${VERSION}\" > VERSION\n\nTS=\"$(date -u +'%Y-%m-%d')\"\nNL=$'\\n'\nNOTES=\"## v${VERSION} \u2014 ${TS}${NL}\n- \ud83c\udf10 **URL \u2192 OPML**: multi-URL input (spaces, commas, semicolons, newlines), auto \\`https://\\`, bracket stripping; ASCII User-Agent (fixes header encoding error). \n- \ud83e\uddf5 **Thread-safe DB writes**: all SQLite writes are marshalled to the Tk main thread (no more cross-thread sqlite errors).\n- \ud83e\uddf0 **OPML menu + hotkeys**: URL \u2192 OPML (Ctrl+U), Convert Selection \u2192 OPML (Ctrl+Shift+O / Ctrl+Alt+O / F6), Batch: Convert Selected \u2192 OPML (Shift+F6).\n- \ud83e\uddf1 **Toolbar integration**: exposing \\`self.toolbar\\` lets plugins add URL \u2192 OPML / Convert \u2192 OPML / Batch \u2192 OPML buttons.\n- \ud83e\uddf9 Polish: safer exporters, better OPML rendering, fewer surprises on binary docs.\n\"\n\ntmpfile=\"$(mktemp)\"\nprintf '%s\\n\\n%s' \"$NOTES\" \"$(cat CHANGELOG.md)\" > \"$tmpfile\"\nmv \"$tmpfile\" CHANGELOG.md\n\ngit add -A\ngit commit -m \"chore(release): v${VERSION} \u2013 URL\u2192OPML fixes, thread-safe DB, OPML menu & batch convert\"\n\n# Create/refresh tag locally\nif git rev-parse \"v${VERSION}\" >/dev/null 2>&1; then\n  git tag -d \"v${VERSION}\" >/dev/null 2>&1 || true\nfi\ngit tag -a \"v${VERSION}\" -m \"FunKit v${VERSION}\"\n\n# Push\ngit push origin \"${BRANCH}\"\nset +e\ngit push origin \"v${VERSION}\"\nif [[ $? -ne 0 ]]; then\n  echo \"\u2139\ufe0f  Tag v${VERSION} already exists on remote; keeping local tag.\"\nfi\nset -e\n\necho \"==> Done. Pushed ${BRANCH} and tag v${VERSION}.\"\necho \"    VERSION set to ${VERSION} and CHANGELOG.md updated.\"\n\n"
}